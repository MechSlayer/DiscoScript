//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DiscoScript.Engine.Parser.Lexer {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ITParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMain([NotNull] TParser.MainContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] TParser.StatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] TParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayDeclaration</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayDeclaration([NotNull] TParser.ArrayDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Decrement</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrement([NotNull] TParser.DecrementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryOperation</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryOperation([NotNull] TParser.BinaryOperationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IndexAccess</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexAccess([NotNull] TParser.IndexAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrowFunction</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunction([NotNull] TParser.ArrowFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UndefinedCoalesce</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUndefinedCoalesce([NotNull] TParser.UndefinedCoalesceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IndexAssignment</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexAssignment([NotNull] TParser.IndexAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AsyncCallFunction</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsyncCallFunction([NotNull] TParser.AsyncCallFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] TParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectDeclaration</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectDeclaration([NotNull] TParser.ObjectDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] TParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Literal</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] TParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Increment</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrement([NotNull] TParser.IncrementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesedExpression</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesedExpression([NotNull] TParser.ParenthesedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WaitAsync</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWaitAsync([NotNull] TParser.WaitAsyncContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ObjectAccess</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectAccess([NotNull] TParser.ObjectAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImportExpression</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportExpression([NotNull] TParser.ImportExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CallFunction</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallFunction([NotNull] TParser.CallFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CoalesceExpression</c>
	/// labeled alternative in <see cref="TParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoalesceExpression([NotNull] TParser.CoalesceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.forILoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForILoop([NotNull] TParser.ForILoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.forEachLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForEachLoop([NotNull] TParser.ForEachLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeclarativeLoopInit</c>
	/// labeled alternative in <see cref="TParser.forLoopStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarativeLoopInit([NotNull] TParser.DeclarativeLoopInitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentLoopInit</c>
	/// labeled alternative in <see cref="TParser.forLoopStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentLoopInit([NotNull] TParser.AssignmentLoopInitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierLoopInit</c>
	/// labeled alternative in <see cref="TParser.forLoopStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierLoopInit([NotNull] TParser.IdentifierLoopInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] TParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStatement([NotNull] TParser.ElseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.varDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclaration([NotNull] TParser.VarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] TParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] TParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.identifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifiers([NotNull] TParser.IdentifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.commaExpressions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommaExpressions([NotNull] TParser.CommaExpressionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeBlock([NotNull] TParser.CodeBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.objectMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObjectMember([NotNull] TParser.ObjectMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.functionCallable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallable([NotNull] TParser.FunctionCallableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] TParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] TParser.FunctionCallContext context);
}
} // namespace DiscoScript.Engine.Parser.Lexer
